---
# defaults file for code-deploy
name_of_private_key_file: "id_rsa" # Keyfile for SSH capability. WIP
git_clone_method: "ssh"
git_method:
  ssh: "ssh"
  https: "https"
git_repo_name: "medical-appointment-notifier" # CHANGE THIS to your repo
git_repo_ssh_url: "git@github.com:cypher4859/medical-appointment-notifier.git" # CHANGE THIS to your SSH url for your git
git_repo_https_url: "https://github.com/cypher4859/medical-appointment-notifier.git" # CHANGE THIS to your HTTPS url for your git
repo_destination_directory: "/usr/share/." # CHANGE THIS to whatever destination directory you'd like
resolve_dependencies: true # Will trigger the ansible tasks to execute a script file to resolve dependencies before the app initialization
application_dependencies_file_name: "example_dependency_script.sh" # The .sh file that contians commands to resolve your app dependencies
application_initialization_script_name: "example_initialization_script.sh" # This script file should execute your app code

terraform_docker_build_image_name: ""
terraform_docker_build_image_path: ""
terraform_docker_build_image_tag: ""

terraform_docker_container_image: "test_ansible_module_container" # CHANGE THIS to the image you'd like to use
terraform_docker_container_name: "test_A"
terraform_docker_container_tag_version: "latest"

terraform_aws_dry_run: false
terraform_project_state: "present"

aws_provider_region: "us-east-2"
# Go to aws console, generate a new access key, copy those keys down
aws_account_access_key: "AKIARO2CBLEW66YB4FOG"
aws_account_secret_key: "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"

aws_ec2_instance_name: "test_ec2_instance"
aws_ec2_instance_type: "t2.micro"
aws_ec2_private_key_name: "aws_test_key_pem.pem"
aws_ec2_public_key_name: "aws_test_key_pem.pub"
aws_ec2_private_key_path: "./roles/codedeploy/files/{{ aws_ec2_private_key_name }}"
aws_ec2_ami: "ami-0c7478fd229861c57"
aws_ec2_vpc_security_group_ids: "sg-695d9217"
aws_ec2_subnet_id: "subnet-2b4a5e51"

