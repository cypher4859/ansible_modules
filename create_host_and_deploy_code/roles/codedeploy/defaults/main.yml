---
# defaults file for code-deploy

# REQURED for the deploy_code role. This is not required in order to run the create_aws_ec2_host role
name_of_private_key_file: "id_rsa" # REQUIRED - CHANGE THIS - Keyfile for SSH capability. WIP

code_repo_destination_directory: "/usr/share/." # REQUIRED - CHANGE THIS -  to whatever destination directory you'd like
code_repo_name: "chooch" # REQUIRED - CHANGE THIS to the git repo or name of directory where you'd like the code to sit

use_git: false
git_repo_https_url: "" # REQUIRED - CHANGE THIS - to your HTTPS url for your git

resolve_dependencies: false # Will trigger the ansible tasks to execute a script file to resolve dependencies before the app initialization
application_dependencies_file_name: "" # REQUIRED - CHANGE THIS - The .sh file that contians commands to resolve your app dependencies
application_initialization_script_name: "chooch_initialization_script.sh" # REQUIRED - CHANGE THIS - This script file should execute your app code

# COMMENTED OUT for the WIP docker technique
# terraform_docker_build_image_name: ""
# terraform_docker_build_image_path: ""
# terraform_docker_build_image_tag: ""
# terraform_docker_container_image: "test_ansible_module_container" # CHANGE THIS to the image you'd like to use
# terraform_docker_container_name: "test_A"
# terraform_docker_container_tag_version: "latest"

terraform_aws_dry_run: false
terraform_project_state: "present"

aws_provider_region: "us-east-2" # REQUIRED - CHANGE THIS - Set to your desired region
# The following are the names of the env variables
# Go to aws console -> generate new key -> set the access key and secret key to env var
# e.g. export AWS_ACCESS_KEY='asdkljeroijbk89379+asdkj'; export AWS_SECRET_KEY='asdjkloi930490273-012-08+390sjdl'
aws_account_access_key_env_name: "AWS_ACCESS_KEY"
aws_account_secret_key_env_name: "AWS_SECRET_KEY"

aws_ec2_instance_name: "test_ec2_instance" # REQUIRED - CHANGE THIS - Set to name of your instance
aws_ec2_instance_type: "t2.micro" # REQUIRED - CHANGE THIS - Set to your desired instance type
aws_ec2_ami: "ami-0c7478fd229861c57" # REQUIRED - CHANGE THIS - Set to your desired AMI
aws_ec2_vpc_security_group_ids: "sg-695d9217" # REQUIRED - CHANGE THIS - Set to an existing VPC security group
aws_ec2_subnet_id: "subnet-2b4a5e51" # REQUIRED - CHANGE THIS - Set to your desired subnet, part of same VPC that your SecGroup refers to

# The public/private key needs to be generated and added to the `roles/codedeploy/files/` and their names set below
# REFER To the README.md for details on how to do this.
aws_ec2_private_key_name: "aws_test_key_pem.pem" # REQUIRED - CHANGE THIS
aws_ec2_public_key_name: "aws_test_key_pem.pub" # REQUIRED - CHANGE THIS
aws_ec2_private_key_path: "./roles/codedeploy/files/{{ aws_ec2_private_key_name }}"

