---
- name: Retrieve code via Git
  block:
    - name: Ensure git package is installed
      become: true
      delegate_to: "{{ host_aws_public_ip }}"
      package:
        name: git
        state: present

    - name: Clone repo and/or make sure repo is up-to-date
      become: true
      delegate_to: "{{ host_aws_public_ip }}"
      git:
        repo: "{{ git_repo_https_url }}"
        dest: "{{ code_repo_destination_directory }}/{{ code_repo_name }}"
  when: use_git

- name: Ensure directory for code repo exists
  become: true
  delegate_to: "{{ host_aws_public_ip }}"
  file:
    path: "{{ code_repo_destination_directory }}/{{ code_repo_name }}"
    state: directory

- name:  Install Dependencies
  become: true
  delegate_to: "{{ host_aws_public_ip }}"
  script:
    chdir: "{{ code_repo_destination_directory }}/{{ code_repo_name }}"
    cmd: "{{ application_dependencies_file_name }}"
  when: resolve_dependencies

- name: Transfer Application Initialization file to remote host
  become: true
  delegate_to: "{{ host_aws_public_ip }}"
  copy: 
    src: "{{ application_initialization_script_name }}"
    dest: "{{ code_repo_destination_directory }}/{{ code_repo_name }}/{{ application_initialization_script_name }}"
    mode: "0755"

- name: Create the service file from the template
  template:
    src: "code_service.j2"
    dest: roles/codedeploy/files/{{ code_service_file_name }}
    mode: "0664"

- name: Transfer the service file to the host
  become: true
  delegate_to: "{{ host_aws_public_ip }}"
  copy: 
    src: "roles/codedeploy/files/{{ code_service_file_name }}"
    dest: "/etc/systemd/system/{{ code_service_file_name }}"
    mode: "0664"

- name: Execute Application Initialization File
  become: true
  delegate_to: "{{ host_aws_public_ip }}"
  service:
    name: "{{ code_service_name }}"
    state: started
    enabled: yes